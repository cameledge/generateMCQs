import streamlit as st
from langchain.document_loaders import PyPDFLoader
from langchain.callbacks import get_openai_callback

from llm import genMCQ
from form import create_google_quiz
from pypdf import PdfReader

st.set_page_config(page_title='MCQ App', page_icon=':pencil2:')

st.title('MCQ App')
st.write('This application generates multiple-choice questions (MCQs) based on uploaded PDF files. Moreover, it can to create a Google Quiz using the MCQs generated by the app.')

with st.container():
    st.write("""Enter your OpenAI API key to get started.
Don't have an API key? 
Create one [here](https://platform.openai.com/account/api-keys).""")
    api_key = st.text_input('Enter your API Key here', type='password')

file = st.file_uploader('Upload Lecture content', type=['pdf'])

with st.form("input form"):
    course_name = st.text_input('Course Name')
    num_mcqs = st.number_input('Enter the number of MCQs', min_value=1, max_value=20, value=10)
    temperature = st.slider('Creativity?', min_value=0.0, max_value=1.0, value=0.0, step=0.1, help='Adjust the creativity of the generated MCQs. Higher values result in more diverse and creative MCQs, while lower values result in more predictable MCQs')

    if file is not None:
        # Process the file and generate MCQs
        with open('uploaded_file.pdf', 'wb') as f:
            f.write(file.getbuffer())

        #reader = PdfReader(file)
             
        loader = PyPDFLoader('uploaded_file.pdf')
        pages = loader.load_and_split()

    submitted = st.form_submit_button("Generate", disabled=False if file else True)

if submitted:
    with st.spinner('Generating...'):
        with get_openai_callback() as cb:
            st.session_state.mcqs = genMCQ(course_name, num_mcqs, pages, api_key, temperature)
            st.write(cb)

st.download_button('Download MCQs as JSON', data=st.session_state.mcqs if 'mcqs' in st.session_state else '', disabled=False if 'mcqs' in st.session_state else True)
if 'mcqs' in st.session_state:
    st.json(st.session_state.mcqs, expanded=False)

with st.form("Create Quiz"):
    st.text('Create Google Quiz')
    formId = st.text_input('Google Quiz/Form ID', help='Add the form ID of a new or an exiting google form. Remember to add the the apps email as collaborator to the Quiz')
    st.text('Apps Email (add this as collaborator): gen-mcq@atomic-rune-391314.iam.gserviceaccount.com')
    
    submitted_create_quiz = st.form_submit_button("Create", disabled=False if 'mcqs' in st.session_state else True)
    
if submitted_create_quiz:         
    with st.spinner('Creating Quiz...'):
        
        result = create_google_quiz(formId, st.session_state.mcqs)
        st.text(result)
        
